version: '3'

services:
# webやnginx等は任意でかえる事ができる
  web:
    # Dockerfileの場所
    build: ./docker-config/php
    container_name: app_php
    volumes:
      - ./:/var/www
    # コンテナに入った時にこのディレクトリから作業が可能となる
    # working_dir: /var/www
    # コンテナを立ち上げる順番を指し、mysqlコンテナを立ち上げるということ
    depends_on:
      - mysql

  nginx:
    image: nginx
    container_name: app_nginx
    build: ./docker-config/nginx
    ports:
      # 80がうまっている時は勿論別でもOK
      - "80:80"
    volumes:
      - .:/var/www
      - ./docker-config/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web

  # mysqlはmysql-volumeのvolumesはそろえることでデータの保存場所を統一させる。＝コンテナを停止した後もデータ保持可能。
  mysql:
    image: mysql:8.0
    container_name: app_db
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: development
      MYSQL_ROOT_USER: root
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: m_user
      MYSQL_PASSWORD: m_user
      TZ: 'Asia/Tokyo'

    volumes:
      # 一回立ち上げて停止再度立ち上げるときにデータ消えたらまずいため下記で保持。
      - ./docker-config/mysql/data:/var/lib/mysql
      - ./docker-config/mysql/my.cnf:/etc/mysql/conf.d/my.cnf

    depends_on:
      - mysql-volume

  mysql-volume:
    image: busybox
    # 上記volumeと同じにする必要
    volumes:
      - ./docker-config/mysql/data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: app_pma
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=root
    links:
      - mysql
    ports:
      - 8080:80
    volumes:
      - /sessions
